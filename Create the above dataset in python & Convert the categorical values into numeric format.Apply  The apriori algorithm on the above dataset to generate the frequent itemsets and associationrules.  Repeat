Create the above dataset in python & Convert the categorical values into numeric format.Apply 
The apriori algorithm on the above dataset to generate the frequent itemsets and associationrules. 
Repeat 
The process with different min_sup values.
TID={1:[“butter”,”bread”,”milk],2=[“butter”,”flour”,”milk”,”suger”],3=[“butter”,”eggs”,”milk”,”salt”],4=[
“eggs”],5=[“butter”,”flour”,”milk”,”salt”]}
Ans:
Import pandas as pd
From mlxtend.preprocessing import TransactionEncoder
From mlxtend.frequent_patterns import apriori, association_rules
# Creating the dataset
Dataset = [[‘butter’, ‘bread’, ‘milk’], [‘butter’, ‘flour’, ‘milk’, ‘sugar’], [‘butter’, ‘eggs’, ‘milk’, ‘salt’], 
[‘eggs’], [‘butter’, ‘flour’, ‘milk’, ‘salt’]]
Df = pd.DataFrame(dataset)
# Converting the categorical values into numeric format
Te = TransactionEncoder()
Te_ary = te.fit(dataset).transform(dataset)
Df = pd.DataFrame(te_ary, columns=te.columns_)
# Generating frequent itemsets using Apriori algorithm with different min_sup values
Min_sup_values = [0.4, 0.3, 0.2]
For min_sup in min_sup_values:
 Frequent_itemsets = apriori(df, min_support=min_sup, use_colnames=True)
 Print(“Frequent Itemsets with minimum support of”, min_sup)
 Print(frequent_itemsets)
 # Generating association rules
 Rules = association_rules(frequent_itemsets, metric=”confidence”, min_threshold=0.7)
 Print(“Association Rules with minimum support of”, min_sup)
 Print(rules)
